# $Id: mkprogmake,v 1.3 2001/01/27 18:38:28 ragge Exp $
#
# Generate an old makefile out of a BSD makefile.
#

# Some default settings...
execfile=a.out
cflags=
warns=
ldadd="-L../backend -lrkom"
noman=
cc=gcc
opt=-O

# Trivial-parse the makefile

while read cmd args; do
	case $cmd in

	\#) ;;

	PROG=) execfile=$args;;

	SRCS=) srcs=$args;;

	CFLAGS=) cflags=$args;;
	CFLAGS+=) cflags=$args;;

	WARNS\?=) warns=$args;;

	LDADD=) ldadd=$args;;
	LDADD+=) ldadd=$ldadd" "$args;;

	# Cannot handle any .if statements yet.
	.if)
	while read cmd args; do
		if [ $cmd = ".endif" ]; then
			break
		fi
	done;;

	NOMAN=) noman=$args;;

	*) ;;

	esac
done

objs=

# Check man page generation
if [ -z "$noman" ]; then
	manpage=$execfile.0
	mansrc=$execfile.1
else
	manpage=
fi

if [ ! -z "$warns" ]; then
	warns="-Wall -Werror -Wmissing-prototypes -Wstrict-prototypes"
fi

# start writing the actual makefile
echo "# Autogenerated makefile, do not edit"
echo
echo "all:" $execfile $manpage
echo

# Loop around and write the actual object file relations
for src in $srcs; do
	obj=${src%c}o
	echo $obj: $src
	echo "	"$cc -c $opt $cflags $src
	echo
	objs=$objs" "$obj
done

echo $execfile":" $objs
echo "	"$cc -o $execfile $objs $ldadd
echo

if [ -z "$noman" ]; then
	echo $manpage: $mansrc
	echo "	"nroff -man $mansrc > $manpage
	echo
fi

echo clean:
echo "	"rm -f $objs $execfile *.core
echo
