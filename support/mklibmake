# $Id: mklibmake,v 1.3 2001/01/27 18:38:28 ragge Exp $
#
# Generate an old makefile out of a BSD makefile.
#

# Some default settings...
libfile=a.out
cflags=
warns=
mklint=
mkprofile=
mkpic=
cc=gcc
opt=-O
tmpfile=/tmp/agen.$$
touch $tmpfile
ar=ar
ranlib=ranlib
xdeps=

# XXX - hack until this script can handle separate relations
xdeps=rkom_proto.h
# XXX - end hack


# Trivial-parse the makefile

while read cmd args; do
	case $cmd in

	\#) ;;

	LIB=) libfile=lib$args".a";;

	SRCS=) srcs=$args;;

	CFLAGS=) cflags=$args;;
	CFLAGS+=) cflags=$args;;

	WARNS\?=) warns=$args;;

	MKLINT=) mklint=$args;;
	MKPROFILE=) mkprofile=$args;;
	MKPIC=) mkpic=$args;;

	# Cannot handle any .if statements yet.
	.if)
	while read cmd args; do
		if [ $cmd = ".endif" ]; then
			break
		fi
	done;;

	*) ;;

	esac
done

objs=

if [ ! -z "$warns" ]; then
	warns="-Wall -Werror -Wmissing-prototypes -Wstrict-prototypes"
fi

# start writing the actual makefile
echo "# Autogenerated makefile, do not edit"
echo
echo "all:" $libfile
echo

# Loop around and write the actual object file relations
for src in $srcs; do
	obj=${src%c}o
	echo $obj: $src $xdeps
	echo "	"$cc -c $opt $warns $cflags $src
	echo
	objs=$objs" "$obj
done

# XXX - hack to include spc dependencies
echo "rkom_proto.c rkom_proto.h rkom_proto_stubs.c: rkom_proto.spc"
echo "	spcgen -ch -i rkom_proto.spc"
echo
# XXX - end hack

echo $libfile":" $objs
echo "	"$ar cq $libfile $objs
echo "	"$ranlib $libfile
echo

# warn some
if [ -z "$mkpic" ]; then
	echo "Cannot autogen rules for PIC files (yet) " >/dev/tty
fi
#if [ -z "$mkprofile" ]; then
#	echo "Cannot autogen rules for profiling files (yet) " >/dev/tty
#fi
if [ -z "$mklint" ]; then
	echo "Cannot autogen rules for linting files (yet) " >/dev/tty
fi

echo clean:
echo "	"rm -f $objs $libfile *.core
echo
